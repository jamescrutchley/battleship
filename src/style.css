* {
    box-sizing: border-box;
    background-color: rgb(238, 238, 238);
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif

}

@keyframes shake {
    0% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-1px); }
    20%, 40%, 60%, 80% { transform: translateX(1px); }
    100% { transform: translateX(0); }
  }

  .shake {
    animation: shake 0.1s infinite;
  }

.app {
    --dynamic-width: calc(100vw / 10);

    width: 100vw;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

h1 {
    margin-top: 10px;
    padding: 0;
    justify-self: flex-end;
}

.labelContainer {
    height: 15vh;
    padding: 0;
    display: flex;
    width: calc(68vw + 110px + var(--dynamic-width));    
    justify-content: space-between;
}

.labelContainer p {
    padding: 0; 
}

.label {
    margin: 0;
    padding: 0;
    align-self: flex-end;
    position: relative;
    font-weight: bold;

    font-size: calc(1vw + 10px)
}

.botLabel::after {
    font-size: calc(2vw + 10px);
    position: absolute;
    content: '↘';
    top: 3vh;
    right: -2vw;
}

.playerLabel::before {
    font-size: calc(2vw + 10px);
    position: absolute;
    content: '↙';
    top: 3vh;
    left: -2vw;
}

.gridContainer {
    height: fit-content;
    width: fit-content;

    margin-top: 3vh;

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;

    gap: calc(var(--dynamic-width) + 10px);
}

.grid {

    width: fit-content;
    height: fit-content;

    border: 1px black solid;
    display: grid;
    grid-template-columns: repeat(10,1fr);
    grid-template-rows: repeat(10, 1fr);

}

.cell {
    width: calc(1.8vw + 10px);
    height: calc(1.8vw + 10px);

    background-color: rgb(226, 252, 255);
    border: 1px black solid;
    position: relative;

    display: flex;
    justify-content: center;
    align-items: center;

}


.cell p {
    font-size: 0.5rem;
    font-weight: bold;
    background: none;  
}

.hovered {
    background-color: lightgrey !important;
    size: 40px;
}

/* .cell:not(.occupied) {
    background-color: lightblue;
} */


#playerGrid .occupied {
    background-color: grey;
}

.temp-occupied {
    background-color: darkgray;
}

.clickable:not(.temp-occupied) {
    cursor: pointer;
}

.alreadyHit::after {
    content: '◍';
    position: absolute;
    scale: 1.5;

    color: blue;
}

.occupied.alreadyHit::after {
    content: '◍';
    position: absolute;
    scale: 1.5;

    color: red;
}

#playAgain {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.gameoverMsg {
    display: none;
    font-weight: bold;
}

.restart {
    cursor: pointer;
    display: none;
    border: none;
    font-weight: 600;
    margin: 0;
    padding: 0;
}

#info {
    margin-top: 0;
    padding-top: 0;

    display: flex;
    align-items: flex-start;
    max-height: 15vh;
    overflow: hidden;
}

.latestaction {
    margin: 0;
    padding: 0;
    white-space: break-spaces;
    text-align: center;

    background-image: linear-gradient(rgba(255, 255, 255, 0), white);
}

body {
    margin: 5px;
}






@media (max-width: 600px) {
    .app {
        --dynamic-width: calc(100vw / 20);
    }
}

@media (max-width: 440px) {
    #info {
        max-height: 15vh;
    }
    .cell {
        width: auto;
        height: auto;
    }

    .grid {
        height: 30vh;
        width: 30vh;
    }
    .gridContainer {
        flex-direction: column;
    }
    .labelContainer {
        height: 10vh;
        justify-content: center;
    }
    .playerLabel {
        position: absolute;
        bottom: 40vh;
        right: 10px;
    }
    .botLabel {
        position: absolute;
        top: 10vh;
        left: 15px;

    }

}